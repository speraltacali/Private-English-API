// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PE.Infrastructure.Context;

namespace PE.Infrastructure.Context.Migrations
{
    [DbContext(typeof(ModelContext))]
    partial class ModelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PE.Domain.Entity.Empleado.Empleado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FehcaBaja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Legajo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PersonaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("PE.Domain.Entity.Empresa.Empresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cuit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<string>("FechaAlta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("PE.Domain.Entity.Galeria.Galeria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

<<<<<<< HEAD
                    b.Property<long>("EmpresaId")
=======
                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<long?>("EmpresaId1")
>>>>>>> a3090da91d3f72234dd34ed011ffbbebb2723f70
                        .HasColumnType("bigint");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

<<<<<<< HEAD
                    b.HasIndex("EmpresaId");
=======
                    b.HasIndex("EmpresaId1");
>>>>>>> a3090da91d3f72234dd34ed011ffbbebb2723f70

                    b.ToTable("Galeria");
                });

            modelBuilder.Entity("PE.Domain.Entity.Novedades.Novedades", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

<<<<<<< HEAD
                    b.Property<long>("EmpresaId")
=======
                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<long?>("EmpresaId1")
>>>>>>> a3090da91d3f72234dd34ed011ffbbebb2723f70
                        .HasColumnType("bigint");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SubTitulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

<<<<<<< HEAD
                    b.HasIndex("EmpresaId");
=======
                    b.HasIndex("EmpresaId1");
>>>>>>> a3090da91d3f72234dd34ed011ffbbebb2723f70

                    b.ToTable("Novedades");
                });

            modelBuilder.Entity("PE.Domain.Entity.PerfilHome.PerfilHome", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

<<<<<<< HEAD
                    b.Property<long>("EmpresaId")
=======
                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<long?>("EmpresaId1")
>>>>>>> a3090da91d3f72234dd34ed011ffbbebb2723f70
                        .HasColumnType("bigint");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

<<<<<<< HEAD
                    b.HasIndex("EmpresaId");
=======
                    b.HasIndex("EmpresaId1");
>>>>>>> a3090da91d3f72234dd34ed011ffbbebb2723f70

                    b.ToTable("PerfilHome");
                });

            modelBuilder.Entity("PE.Domain.Entity.Persona.Persona", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domicilio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("PE.Domain.Entity.Profesor.Profesor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domicilio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Profesor");
                });

            modelBuilder.Entity("PE.Domain.Entity.Usuario.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cargo")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<long>("EmpresaId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PersonaId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProfesorId")
                        .HasColumnType("bigint");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("PE.Domain.Entity.Empleado.Empleado", b =>
                {
                    b.HasOne("PE.Domain.Entity.Persona.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PE.Domain.Entity.Galeria.Galeria", b =>
                {
                    b.HasOne("PE.Domain.Entity.Empresa.Empresa", "Empresa")
                        .WithMany("Galeria")
<<<<<<< HEAD
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
=======
                        .HasForeignKey("EmpresaId1");
>>>>>>> a3090da91d3f72234dd34ed011ffbbebb2723f70
                });

            modelBuilder.Entity("PE.Domain.Entity.Novedades.Novedades", b =>
                {
                    b.HasOne("PE.Domain.Entity.Empresa.Empresa", "Empresa")
                        .WithMany("Novedades")
<<<<<<< HEAD
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
=======
                        .HasForeignKey("EmpresaId1");
>>>>>>> a3090da91d3f72234dd34ed011ffbbebb2723f70
                });

            modelBuilder.Entity("PE.Domain.Entity.PerfilHome.PerfilHome", b =>
                {
                    b.HasOne("PE.Domain.Entity.Empresa.Empresa", "Empresa")
                        .WithMany("PerfilHome")
<<<<<<< HEAD
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
=======
                        .HasForeignKey("EmpresaId1");
>>>>>>> a3090da91d3f72234dd34ed011ffbbebb2723f70
                });

            modelBuilder.Entity("PE.Domain.Entity.Usuario.Usuario", b =>
                {
                    b.HasOne("PE.Domain.Entity.Empresa.Empresa", "Empresa")
                        .WithMany("Usuario")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PE.Domain.Entity.Persona.Persona", "Persona")
                        .WithMany("Usuario")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PE.Domain.Entity.Profesor.Profesor", null)
                        .WithMany("Usuario")
                        .HasForeignKey("ProfesorId");
                });
#pragma warning restore 612, 618
        }
    }
}
